@model IEnumerable<MovieDiscussion.Common.Models.DiscussionEntity>
@{
    @Html.AntiForgeryToken()
    ViewBag.Title = "All Discussions";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var isAuthor = Session["IsAuthor"] != null && (bool)Session["IsAuthor"];
    var userReactions = ViewBag.UserReactions as Dictionary<string, bool> ?? new Dictionary<string, bool>();
    var counts = ViewBag.ReactionCounts as Dictionary<string, dynamic> ?? new Dictionary<string, dynamic>();
    var userFollows = ViewBag.UserFollows as Dictionary<string, bool> ?? new Dictionary<string, bool>();
}

<!-- FILTER i SORT -->
<form method="get" class="mb-4 d-flex gap-2 align-items-center">
    <div class="d-flex gap-2">
        <input type="text" name="searchTitle" class="form-control" placeholder="Search by title" value="@Request.QueryString["searchTitle"]" />
        <input type="text" name="searchGenre" class="form-control" placeholder="Search by genre" value="@Request.QueryString["searchGenre"]" />
        <button type="submit" class="btn btn-primary">Search</button>
    </div>
    <div class="ml-auto">
        <select id="sortDropdown" name="sortBy" class="form-control" onchange="this.form.submit()">
            <option value="">Sort by</option>
            <option value="likes" @(Request.QueryString["sortBy"] == "likes" ? "selected" : "")>Most Likes</option>
            <option value="dislikes" @(Request.QueryString["sortBy"] == "dislikes" ? "selected" : "")>Most Dislikes</option>
        </select>
    </div>
</form>

<h2>All Discussions</h2>

<div class="row">
    @foreach (var discussion in Model)
    {
        var c = counts.ContainsKey(discussion.RowKey)
            ? counts[discussion.RowKey]
            : new { Likes = 0, Dislikes = 0 };

        var discussionId = discussion.RowKey;
        var isLiked = userReactions.ContainsKey(discussionId) && userReactions[discussionId] == true;
        var isDisliked = userReactions.ContainsKey(discussionId) && userReactions[discussionId] == false;

        <div class="col-md-4 mb-4">
            <div class="card h-100 position-relative">
                @* Zvezdica za follow ostaje sa skriptom *@
                <button class="btn btn-link follow-btn position-absolute"
                        style="bottom:10px; right:10px; font-size: 1.5rem;"
                        data-discussion="@discussionId">
                    <span class="follow-icon">@((userFollows.ContainsKey(discussionId) && userFollows[discussionId]) ? "★" : "☆")</span>
                </button>

                @Html.ActionLink("View Comments", "Details", "Discussion", new { id = discussion.RowKey }, new { @class = "btn btn-secondary" })


                @if (!string.IsNullOrEmpty(discussion.CoverImageUrl))
                {
                    <img src="@discussion.CoverImageUrl" class="card-img-top discussion-img" alt="Cover Image">
                }
                <div class="card-body">
                    <h5 class="card-title">@discussion.MovieTitle (@discussion.ReleaseYear)</h5>
                    <p><strong>Genre:</strong> @discussion.Genre</p>
                    <p><strong>IMDB Rating:</strong> @discussion.IMDBRating</p>
                    <p><strong>Duration:</strong> @discussion.DurationMinutes mins</p>
                    <p>@discussion.Synopsis</p>


                    @if (isAuthor)
                    {
                        <div class="mt-2">
                            @Html.ActionLink("Edit", "Edit", "Discussion", new { id = discussion.RowKey }, new { @class = "btn btn-sm btn-primary" })
                            @Html.ActionLink("Delete", "Delete", "Discussion", new { id = discussion.RowKey }, new { @class = "btn btn-sm btn-danger ml-2" })
                        </div>
                    }
                </div>
            </div>
        </div>
    }
</div>

@if (ViewBag.TotalPages > 1)
{
    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center">
            @for (int i = 1; i <= ViewBag.TotalPages; i++)
            {
                <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { searchTitle = Request.QueryString["searchTitle"], searchGenre = Request.QueryString["searchGenre"], sortBy = Request.QueryString["sortBy"], page = i })">@i</a>
                </li>
            }
        </ul>
    </nav>
}

@section Scripts {
    <!-- jQuery CDN -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <script>
    $(function() {
        // Follow / Unfollow AJAX
        $(document).on('click', '.follow-btn', function() {
            var btn = $(this);
            var discussionId = btn.data('discussion');
            var token = $('input[name="__RequestVerificationToken"]').val();

            $.ajax({
                url: '@Url.Action("ToggleFollow","Discussion")',
                type: 'POST',
                data: {
                    __RequestVerificationToken: token,
                    discussionId: discussionId
                },
                success: function(res) {
                    btn.find('.follow-icon').text(res.Following ? '★' : '☆');
                },
                error: function(xhr) {
                    console.error(xhr.responseText);
                }
            });
        });
    });
    </script>
}
